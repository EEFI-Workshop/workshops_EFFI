name: Deploy R Script

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
# checkout@v2 is predifined action in github to checkout - cloning-fetching-configuring the code from the repository
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    # - name: Install SSH client
    #   run: sudo apt-get install -y openssh-client

# take the private key of aws server stored in git hub actions and put it to SSH agent which conects aws server with git hub action server and no more authentication is needed
    - name: Add SSH key
      uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    # - name: Debug workspace
    #   run: |
    #     echo "Current working directory:"
    #     pwd
    #     echo "Workspace contents:"
    #     ls -l /home/runner/work/workshops_EFFI/workshops_EFFI/
    #     ls -l /home/runner/work/workshops_EFFI/workshops_EFFI/vegetation_donana

    # - name: Check if Docker is installed
    #   run: docker --version
#
# we use docker because it is easy to use and we can use neon image with all useful packages and its dependencies
# -t is only tagging-giving name to the image in our case vegetaation_donana_image
# | the pipe symbol is use to run multiple commands in one step
    - name: Build Docker image
      run: |
        cd /home/runner/work/workshops_EFFI/workshops_EFFI/vegetation_donana
        docker build -t vegetation_donana_image .
      # .tar is a file which can be transported to remote server in our cas to aws server
# -o means output saving outpus as vegetation_donana_image.tar
    - name: Save Docker image to tar file
      run: |
        docker save vegetation_donana_image -o vegetation_donana_image.tar

# scp will copy our .tar file to the aws server from github action server
    - name: Copy Docker image tar file to server
      run: |
        scp -o StrictHostKeyChecking=no vegetation_donana_image.tar ubuntu@ec2-13-61-146-74.eu-north-1.compute.amazonaws.com:/home/ec2-user/

    - name: Load Docker image and run container on server
      run: |
        ssh -o StrictHostKeyChecking=no ubuntu@ec2-13-61-146-74.eu-north-1.compute.amazonaws.com << 'EOF'
      # Stop and remove the container if it exists
          docker stop vegetation_donana_container || true
          docker rm vegetation_donana_container || true
          
          # Remove the existing image if it exists
          docker rmi -f vegetation_donana_image || true

          # Load the new image
          docker load -i /home/ec2-user/vegetation_donana_image.tar

          # Run the container
          docker run -d -p 3840:3838 --name vegetation_donana_container vegetation_donana_image
        EOF


